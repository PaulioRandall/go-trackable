#!/bin/bash

clear
set -e
tabs -2

TEST_TIMEOUT="2s"
BUILD_FLAGS=""
#BUILD_FLAGS=-gcflags -m -ldflags "-s -w"

printUsage() {
	println "Usage:"
	println "\t" "./godo [help]" "\t\t" "# Print usage"
	println "\t" "./godo doc[s]" "\t\t" "# Fire up documentation server"
	println "\t" "./godo clean " "\t\t" "# Clean Go caches and build folder"
	println "\t" "./godo test  " "\t\t" "# fmt -> build -> test -> vet"
}

println() {
	for s in "$@"
	do
		printf "$s"
	done
	printf "\\n"
}

goDoc() {
	doc_port=":9999"

	println "Documentation..."
	println
	println "\t" "Libs    - http://localhost${doc_port}/pkg/#thirdparty"
	println
	println "\t" "Go      - http://localhost${doc_port}/pkg/#stdlib"
	println
	println "\t" "All     - http://localhost${doc_port}/"
	println
	
	godoc -http=${doc_port}
}

goClean() {
	println "Deep cleaning..."
	go clean -cache -testcache
}

goFmt() {
	println "Formatting..."
	go fmt ./...
}

goTest() {
	println "Testing..."
	go test ./... -timeout $TEST_TIMEOUT
}

goVet() {
	println "Vetting..."
	go vet ./...
}

if [[ "$1" == "" || "$1" == "help" ]]; then
	printUsage
	exit 0
fi

if [[ "$1" == "doc" || "$1" == "docs" ]]; then
	goDoc
	exit 0
fi

if [[ "$1" == "clean" ]]; then
	goClean
	exit 0
fi

if [[ "$1" == "test" ]]; then
	goFmt
	goTest
	goVet
	exit 0
fi

println "I don't understand the option '$1'."
printUsage
exit 1
